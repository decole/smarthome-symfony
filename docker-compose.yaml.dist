version: "3.4"
services:
  nginx:
    image: nginx:alpine
    container_name: uberserver-web
#    restart: always
    volumes:
      - ./:/var/www
      - ./docker/nginx/config:/etc/nginx/conf.d
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      - php-fpm
    ports:
      - "80:80"
    networks:
      - uberserver

  php-fpm:
    build:
      context: .
      dockerfile: ./docker/php/DockerfileCI
    container_name: ci-symfony
    volumes:
      - ./:/var/www
      - ./docker/php/php-fpm.ini:/usr/local/etc/php/php.ini
    environment:
      - "PSQL_PORT=5432"
      - "PSQL_HOST=postgres"
      - "PHP_IDE_CONFIG=serverName=Docker"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - uberserver-microservice

  postgres:
    image: postgres:11.2-alpine
    container_name: uberserver-postgres
    volumes:
      - ./docker/postgres/create_extension.sql:/docker-entrypoint-initdb.d/create_extension.sql
      - uberserver-postgres:/var/lib/postgresql/data
    ports:
      - "54322:5432"
    environment:
      - "POSTGRES_DB=uberserver"
      - "POSTGRES_USER=root"
      - "POSTGRES_PASSWORD=root"
    networks:
      - uberserver

  rabbitmq:
    image: bitnami/rabbitmq:latest
    container_name: uberserver-rabbitmq
    volumes:
      - ./docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - uberserver-rabbitmq:/var/lib/rabbitmq
    environment:
      - "RABBITMQ_DEFAULT_USER=rabbit"
      - "RABBITMQ_DEFAULT_PASS=rabbit"
    ports:
      - "15673:15672"
    networks:
      - uberserver

  redis:
    image: redis:6.0
    container_name: uberserver-redis
    networks:
      - uberserver

#  redisinsight:
#      image: redislabs/redisinsight:latest
#      container_name: uberserver-redisinsight
#      restart: always
#      ports:
#          - "8001:8001"
#      volumes:
#        - uberserver-redisinsight:/db
#      networks:
#          - uberserver

  mqtt-bridge:
    build: ./docker/mqtt_rabbitMQ_bridge
    container_name: uberserver-mqtt-bridge
    volumes:
      - .env.local:/mqttToRabbit/.env
#    restart: always
    depends_on:
      - rabbitmq
    networks:
      - uberserver

volumes:
  uberserver-postgres: {}
  uberserver-redisinsight: {}
  uberserver-prometheus_data: {}
  uberserver-rabbitmq: {}
  alertmanager: {}

networks:
  uberserver:
    driver: bridge