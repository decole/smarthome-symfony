version: "3.4"
services:
  nginx:
    image: nginx:alpine
    container_name: uberserver-web
#    restart: always
    volumes:
      - ./:/var/www
      - ./docker/nginx/config:/etc/nginx/conf.d
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      - php-fpm
    ports:
      - "84:80"
    networks:
      - uberserver

  php-fpm:
    image: registry.gitlab.com/decole/uberserver-symfony:supervisor
    container_name: uberserver-symfony-supervisor
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./docker/supervisor/config:/etc/supervisor/conf.d
      - ./:/var/www
      - ./docker/php/php-fpm.ini:/usr/local/etc/php/php.ini
#    restart: always
    command: /usr/bin/supervisord
    environment:
      - "PSQL_PORT=5432"
      - "PSQL_HOST=postgres"
      - "RABBITMQ_PORT=5672"
      - "RABBITMQ_HOST=docker-rabbitmq"
      - "PHP_IDE_CONFIG=serverName=Docker"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - uberserver

  commands:
    build:
      context: .
      dockerfile: ./docker/php/DockerfileCommands
    container_name: uberserver-command
    volumes:
      - ./:/var/www
      - ./docker/php/php-fpm.ini:/usr/local/etc/php/php.ini
    environment:
      - "PSQL_PORT=5432"
      - "PSQL_HOST=postgres"
    depends_on:
      - postgres
    networks:
      - uberserver

  postgres:
    image: postgres:11.2-alpine
    container_name: uberserver-postgres
    volumes:
      - ./docker/postgres/create_extension.sql:/docker-entrypoint-initdb.d/create_extension.sql
      - uberserver-postgres:/var/lib/postgresql/data
    ports:
      - "54322:5432"
    environment:
      - "POSTGRES_DB=uberserver"
      - "POSTGRES_USER=root"
      - "POSTGRES_PASSWORD=root"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - uberserver

#  rabbitmq:
#    image: bitnami/rabbitmq:latest
#    container_name: uberserver-rabbitmq
#    volumes:
#      - ./docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
#      - uberserver-rabbitmq:/var/lib/rabbitmq
#    environment:
#      - "RABBITMQ_DEFAULT_USER=rabbit"
#      - "RABBITMQ_DEFAULT_PASS=rabbit"
#    ports:
#      - "5673:5672"
#      - "15673:15672"
#    healthcheck:
#      test: rabbitmq-diagnostics -q ping
#      interval: 30s
#      timeout: 30s
#      retries: 3
#    networks:
#      - uberserver

  redis:
    image: redis:6.0
    container_name: uberserver-redis
    networks:
      - uberserver

#  redisinsight:
#      image: redislabs/redisinsight:latest
#      container_name: uberserver-redisinsight
#      restart: always
#      ports:
#          - "8001:8001"
#      volumes:
#        - uberserver-redisinsight:/db
#      networks:
#          - uberserver

  mqtt-bridge:
    build: ./docker/mqtt_rabbitMQ_bridge
    container_name: uberserver-mqtt-bridge
    volumes:
      - .env.local:/mqttToRabbit/.env
#    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "2112:2112"
    networks:
      - uberserver

volumes:
  uberserver-postgres: {}
  uberserver-redisinsight: {}
  uberserver-prometheus_data: {}
  uberserver-rabbitmq: {}
  alertmanager: {}

networks:
  uberserver:
    driver: bridge